{% macro render_deployments(deployments) %}
<div class="uk-child-width-1-4@s uk-grid-match" uk-grid>
    {%- for deployment in deployments %}
        <div>
            <div
                id="deployment-card-{{ loop.index }}"
                class="uk-card uk-card-body uk-text-center"
                style="word-wrap: break-word !important;"
            >
                <h4>{{ deployment.commit.filename }} - {{ deployment.commit.id|truncate(7, True, '') }}</h4>
                <p>{{ deployment.deployment_ip }}<p>
                <button
                    class="uk-button uk-button-danger uk-button-small uk-align-center"
                    onclick="deleteDeployment{{ deployment.id }}()"
                >
                    Delete
                </button>
            </div>
        </div>
        <div style="display: none">
        <script type="text/javascript">
            const deleteDeployment{{ deployment.id }} = async () => {
                const endpoint = "{{ url_for('models.undeploy_model', project_id=deployment.project.id, commit_id=deployment.commit.id) }}";
                const res = await fetch(endpoint, {
                    method: "POST",
                    body: {}
                });
                window.location.href = "{{ request.url }}";
            }
        </script>
        </div>
    {%- endfor %}
</div>

<script src="{{ url_for('static', filename='js/iterator.js') }}"></script>
<script type="text/javascript">
    const deployments = new NodeIterator('deployment-card');
    deployments.applyToAll(deployment => {
        deployment.addEventListener('mouseover', function() {
            this.classList.add('uk-card-default');
        });
        deployment.addEventListener('mouseout', function() {
            this.classList.remove('uk-card-default');
        });
    });


</script>
{%- endmacro %}
